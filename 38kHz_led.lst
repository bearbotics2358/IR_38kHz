
38kHz_led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000088  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a74  00000000  00000000  000000dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000778  00000000  00000000  00000b50  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	28 c0       	rjmp	.+80     	; 0x54 <__bad_interrupt>
   4:	27 c0       	rjmp	.+78     	; 0x54 <__bad_interrupt>
   6:	26 c0       	rjmp	.+76     	; 0x54 <__bad_interrupt>
   8:	25 c0       	rjmp	.+74     	; 0x54 <__bad_interrupt>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	22 c0       	rjmp	.+68     	; 0x54 <__bad_interrupt>
  10:	21 c0       	rjmp	.+66     	; 0x54 <__bad_interrupt>
  12:	20 c0       	rjmp	.+64     	; 0x54 <__bad_interrupt>
  14:	1f c0       	rjmp	.+62     	; 0x54 <__bad_interrupt>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	1c c0       	rjmp	.+56     	; 0x54 <__bad_interrupt>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_copy_data>:
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	e8 e8       	ldi	r30, 0x88	; 136
  32:	f0 e0       	ldi	r31, 0x00	; 0
  34:	02 c0       	rjmp	.+4      	; 0x3a <.do_copy_data_start>

00000036 <.do_copy_data_loop>:
  36:	05 90       	lpm	r0, Z+
  38:	0d 92       	st	X+, r0

0000003a <.do_copy_data_start>:
  3a:	a0 36       	cpi	r26, 0x60	; 96
  3c:	b1 07       	cpc	r27, r17
  3e:	d9 f7       	brne	.-10     	; 0x36 <.do_copy_data_loop>

00000040 <__do_clear_bss>:
  40:	10 e0       	ldi	r17, 0x00	; 0
  42:	a0 e6       	ldi	r26, 0x60	; 96
  44:	b0 e0       	ldi	r27, 0x00	; 0
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	a0 36       	cpi	r26, 0x60	; 96
  4c:	b1 07       	cpc	r27, r17
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	0a d0       	rcall	.+20     	; 0x66 <main>
  52:	18 c0       	rjmp	.+48     	; 0x84 <_exit>

00000054 <__bad_interrupt>:
  54:	d5 cf       	rjmp	.-86     	; 0x0 <__vectors>

00000056 <init>:
// #define IR_CLOCK_RATE    39500L

void init(void)
{
	// use PB0 as output (pin 5)
	DDRB = 0x01;
  56:	81 e0       	ldi	r24, 0x01	; 1
  58:	87 bb       	out	0x17, r24	; 23
  // toggle pin 5 on compare
  TCCR0A = _BV(WGM01) | _BV(COM0A0);
  5a:	92 e4       	ldi	r25, 0x42	; 66
  5c:	9a bd       	out	0x2a, r25	; 42
  TCCR0B = _BV(CS00);
  5e:	83 bf       	out	0x33, r24	; 51
  
  // 38kHz timer
  OCR0A = (F_CPU/(IR_CLOCK_RATE*2L)-1);
  60:	88 e6       	ldi	r24, 0x68	; 104
  62:	89 bd       	out	0x29, r24	; 41
}
  64:	08 95       	ret

00000066 <main>:
// #define IR_CLOCK_RATE    39500L

void init(void)
{
	// use PB0 as output (pin 5)
	DDRB = 0x01;
  66:	81 e0       	ldi	r24, 0x01	; 1
  68:	87 bb       	out	0x17, r24	; 23
  // toggle pin 5 on compare
  TCCR0A = _BV(WGM01) | _BV(COM0A0);
  6a:	92 e4       	ldi	r25, 0x42	; 66
  6c:	9a bd       	out	0x2a, r25	; 42
  TCCR0B = _BV(CS00);
  6e:	83 bf       	out	0x33, r24	; 51
  
  // 38kHz timer
  OCR0A = (F_CPU/(IR_CLOCK_RATE*2L)-1);
  70:	88 e6       	ldi	r24, 0x68	; 104
  72:	89 bd       	out	0x29, r24	; 41
{
	init();

	// output is automatic off of timer, so just sleep
	for(;;)
		sleep_mode();
  74:	85 b7       	in	r24, 0x35	; 53
  76:	80 62       	ori	r24, 0x20	; 32
  78:	85 bf       	out	0x35, r24	; 53
  7a:	88 95       	sleep
  7c:	85 b7       	in	r24, 0x35	; 53
  7e:	8f 7d       	andi	r24, 0xDF	; 223
  80:	85 bf       	out	0x35, r24	; 53
  82:	f8 cf       	rjmp	.-16     	; 0x74 <main+0xe>

00000084 <_exit>:
  84:	f8 94       	cli

00000086 <__stop_program>:
  86:	ff cf       	rjmp	.-2      	; 0x86 <__stop_program>
